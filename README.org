#+OPTIONS: ^:nil

* Hacked riak
  hack涉及到的riak组件有riak_kv, riak_api和riak_pb.

  - riak_kv
    添加 riak_kv_pb_scan.erl,
    riak_kv_scan_fsm.erl,
    riak_kv_scan_core.erl,
    riak_kv_scan_fsm_sup.erl,
    修改 riak_client.erl,
    riak_kv_eleveldb_backend.erl,
    riak_kv_sup.erl,
    riak_kv_vnode.hrl,
    riak_kv_vnode.erl

  - riak_api
    修改rebar.config, 替换riak_pb依赖为2.0.0_hack分支

  - riak_pb
    修改riak_kv.proto,
    riak_pb_messages.csv

** Build
   #+BEGIN_SRC sh
     git clone ssh://gitlab@gitlab.widget-inc.com:65422/tiansheng.qin/riak.git

     cd riak

     git checkout 2.0.0_hack

     make rel
   #+END_SRC

** Start
   #+BEGIN_SRC sh
     # start riak, create bucket-type of indexes, finally attach the riak
     ./start
   #+END_SRC

** Test
   #+BEGIN_SRC sh
     # clone hacked riak
     git clone ssh://gitlab@gitlab.widget-inc.com:65422/tiansheng.qin/riak-erlang-client.git

     cd riak-erlang-client

     make

     # start eshell
     erl -pa ebin deps/*/ebin
   #+END_SRC

   #+BEGIN_SRC erlang

     %% get Pid
     {ok, Pid} = riakc_pb_socket:start_link("127.0.0.1", 8087).

     %% update indexes bucket type
     riakc_pb_socket:set_bucket_type(Pid, <<"indexes">>, [{chash_keyfun, {chash_keyfun, chash_index_keyfun}}]).

     %% inject data
     Object1 = riakc_obj:new({<<"indexes">>, <<"indexes">>}, <<"users:1:pins$$1">>, <<>>),
     riakc_pb_socket:put(Pid, Object1).

     Object2 = riakc_obj:new({<<"indexes">>, <<"indexes">>}, <<"users:1:pins$$2">>, <<>>),
     riakc_pb_socket:put(Pid, Object2).

     Object3 = riakc_obj:new({<<"indexes">>, <<"indexes">>}, <<"users:1:pins$$3">>, <<>>),
     riakc_pb_socket:put(Pid, Object3).

     Object4 = riakc_obj:new({<<"indexes">>, <<"indexes">>}, <<"users:1:pins$$4">>, <<>>),
     riakc_pb_socket:put(Pid, Object4).

     Object5 = riakc_obj:new({<<"indexes">>, <<"indexes">>}, <<"users:1:pins$$5">>, <<>>),
     riakc_pb_socket:put(Pid, Object5).

     Object6 = riakc_obj:new({<<"indexes">>, <<"indexes">>}, <<"users:1:pins$$6">>, <<>>),
     riakc_pb_socket:put(Pid, Object6).

     Object7 = riakc_obj:new({<<"indexes">>, <<"indexes">>}, <<"users:1:pins$$7">>, <<>>),
     riakc_pb_socket:put(Pid, Object7).

     Object8 = riakc_obj:new({<<"indexes">>, <<"indexes">>}, <<"users:1:pins$$8">>, <<>>),
     riakc_pb_socket:put(Pid, Object8).

     Object9 = riakc_obj:new({<<"indexes">>, <<"indexes">>}, <<"users:1:pins$$9">>, <<>>),
     riakc_pb_socket:put(Pid, Object9).

     Object10 = riakc_obj:new({<<"indexes">>, <<"indexes">>}, <<"users:1:pins$$10">>, <<>>),
     riakc_pb_socket:put(Pid, Object10).

     ObjectEnd = riakc_obj:new({<<"indexes">>, <<"indexes">>}, <<"users:1:pins$$end">>, <<>>),
     riakc_pb_socket:put(Pid, ObjectEnd).

     %% scan test
     riakc_pb_socket:scan(Pid, {<<"indexes">>, <<"indexes">>}, <<"users:1:pins">>, 0, 2, prev).

     %% Result: {ok,["9","8"]}
   #+END_SRC
